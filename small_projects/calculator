#Milo Troup P:6
import math
allowed_opp = ["+", "-", "*", "/", "**", "//", "%", "sqrt"]
allowed_costants = [["result", 0], ("PI", math.pi), ("e", math.e)]

break_loop = False

class Step_Caculator:
    def __init__(self):
        self.result = allowed_costants[0][1]
        self.num1 = 0
        self.num2 = 0

    def two_numbs_ask(self):
        while True:
            num1 = input("Put the first number: ")
            num2 = input("Put the second number: ")
            try:
                num1 = float(num1)
            except ValueError:
                for constant in allowed_costants:
                    if num1 == constant[0]:
                        num1 = constant[1]
                        break
                else:
                    print("Invalid input for the first number. Please try again.")
                    continue

            try:
                num2 = float(num2)
            except ValueError:
                for constant in allowed_costants:
                    if num2 == constant[0]:
                        num2 = constant[1]
                        break
                else:
                    print("Invalid input for the second number. Please try again.")
                    continue

            return num1, num2

    def add(self, num1, num2):
        try:
            self.result = num1 + num2
        except OverflowError:
            print("Overflow error occurred during addition.")

    def subtract(self, num1, num2):
        try:
            self.result = num1 - num2
        except OverflowError:
            print("Overflow error occurred during subtraction.")

    def multiply(self, num1, num2):
        try:
            self.result = num1 * num2
        except OverflowError:
            print("Overflow error occurred during multiplication.")

    def divide(self, num1, num2):
        while num2 == 0:
            print("You can't divide by 0")
            num2 = input("Put the second number: (not 0) ")
        try:
            self.result = num1 / num2
        except OverflowError:
            print("Overflow error occurred during division.")

    def power(self, num1, num2):
        try:
            self.result = num1 ** num2
        except OverflowError:
            print("Overflow error occurred during power operation.")

    def root(self, num1, num2):
        try:
            self.result = num1 ** num2
        except OverflowError:
            print("Overflow error occurred during root operation.")

    def floor_divide(self, num1, num2):
        try:
            self.result = num1 // num2
        except OverflowError:
            print("Overflow error occurred during floor division.")

    def modulo(self, num1, num2):
        try:
            self.result = num1 % num2
        except OverflowError:
            print("Overflow error occurred during modulo operation.")
    
    def get_result(self):
        return self.result
    
    def reset(self):
        allowed_costants[0][1] = 0
        
    def set_result(self, num):
        round(num, 3)
        allowed_costants[0][1] = self.result
        
        

class Group_Caculator:
    def __init__(self):
        self.result = allowed_costants[0][1]
    

   
def mainLoop_Step_Caculator():
    print("Welcome to the step calculator")
    while break_loop == False:
        print('Say "+" to add')
        print('"-" to subtract')
        print('"*" to multiply')
        print('"/" to divide')
        print('"**" to power')
        print('"//" to floor divide')
        print('"%"" to modulo')
        print('"sqrt" to root')
        print('"r" to get previous result')
        print('"c" to clear previous result')
        print("Say 'e' to exit the step calculator")
        
        user_input = input("Put number of what to do. ")

        calculator = Step_Caculator()
        
        if user_input == "h":
            print(f"You can only use the following operations: {allowed_opp}")
            print(f"You can only use the following constants: {allowed_costants}")
        elif user_input == "+":
            num1, num2 = calculator.two_numbs_ask()
            calculator.add(num1, num2)
        elif user_input == "-":
            num1, num2 = calculator.two_numbs_ask()
            calculator.subtract(num1, num2)
        elif user_input == "*":
            num1, num2 = calculator.two_numbs_ask()
            calculator.multiply(num1, num2)
        elif user_input == "/":
            num1, num2 = calculator.two_numbs_ask()
            calculator.divide(num1, num2)
        elif user_input == "**":
            num1, num2 = calculator.two_numbs_ask()
            calculator.power(num1, num2)
        elif user_input == "//":
            num1, num2 = calculator.two_numbs_ask()
            calculator.floor_divide(num1, num2)
        elif user_input == "%":
            num1, num2 = calculator.two_numbs_ask()
            calculator.modulo(num1, num2)
        elif user_input == "sqrt":
            num1, num2 = calculator.two_numbs_ask()
            calculator.root(num1, num2)
        elif user_input == "r":
            print(calculator.get_result())
        elif user_input == "c":
            calculator.reset()
            print("Result has been reset.")
        elif user_input == "e":
            switching_opperators()
        else:
            print("Invalid input")
        if user_input != "r" and user_input != "c":
            calculator.set_result(calculator.get_result())
            print(calculator.get_result())
        print()
    
    
def mainLoop_Group_Caculator():
    print("Welcome to the group calculator")
    while break_loop == False:
        print(f"You can only use the following opperations: {allowed_opp}")
        print("this is not yet done")
        switching_opperators()
        break
    
    
def switching_opperators():
    while True:
        if input("Do you want to switch opperations? (y/n) ") == "y":
            if input("Do you want to switch to the group calculator? (y/n) ") == "y":
                mainLoop_Group_Caculator()
            if input("Do you want to switch to the step calculator? (y/n) ") == "y":
                mainLoop_Step_Caculator()
        if input("Do you want to exit the calculator? (y/n) ") == "y":
            global break_loop
            break_loop = True
            break
        
        
print("Welcome to the calculator")
if input("Do you want to use the group calculator or step calculator? (g/s) ") == "g":
    mainLoop_Group_Caculator()
else:
    mainLoop_Step_Caculator()

